stages:
  - build
  - deploy

docker-build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

prod-deploy:
  image: bitnami/kubectl:latest
  stage: deploy
  before_script:
    - kubectl --kubeconfig=/k8s/kub-config get nodes
    - kubectl version
    - kubectl cluster-info
    - kubectl get nodes
    - kubectl create secret docker-registry regcred --docker-server=registry.gitlab.com --docker-username="$CI_REGISTRY_USER" --docker-password="$CI_REGISTRY_PASSWORD"
    - kubectl delete deployment acheeve-deployment
  script:
    - kubectl apply -f /k8s/acheeve.yaml
